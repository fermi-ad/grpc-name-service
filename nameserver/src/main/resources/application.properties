
%prod.quarkus.datasource.db-kind = postgresql
%prod.quarkus.datasource.username = quarkus
%prod.quarkus.datasource.password = quarkus
%prod.quarkus.datasource.jdbc.url = jdbc:postgresql://localhost:5432/nameserver

quarkus.flyway.migrate-at-start=true
quarkus.flyway.repair-at-start=true
%dev.quarkus.flyway.clean-at-start=true

#match name used in %prod.quarkus.datasource.jdbc.url
quarkus.datasource.devservices.db-name=nameserver

quarkus.grpc.server.enable-reflection-service=true

#Required to using Vert server to do authorization
quarkus.grpc.server.use-separate-server=false
#Expose service
quarkus.http.host=0.0.0.0
quarkus.grpc.server.host=0.0.0.0
quarkus.grpc.server.plain-text=false

#TLS setup
quarkus.http.ssl.certificate.files=ssl/server.crt
quarkus.http.ssl.certificate.key-files=ssl/server.key
quarkus.http.insecure-requests=disabled

#Keycloak setup
%prod.quarkus.oidc.auth-server-url=http://localhost:8180/realms/quarkus
quarkus.oidc.client-id=backend-service
quarkus.oidc.credentials.secret=secret
%dev.quarkus.keycloak.devservices.realm-path=quarkus-realm.json

#
# Environment for unit tests
#
# To simplify database setup for testing, use in-memory h2 as the database
%test.quarkus.datasource.db-kind = h2
# disable Keycloak 
%test.quarkus.oidc.enabled=false
%test.quarkus.hibernate-orm.database.generation=drop-and-create
# Use import.sql for test data
%test.quarkus.hibernate-orm.sql-load-script=import.sql
